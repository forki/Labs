<Fluent:RibbonWindow x:Class="ApiTester.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
        xmlns:wpfspark="clr-namespace:WPFSpark;assembly=WPFSpark"                 
        xmlns:local="clr-namespace:ApiTester.Wpf"
        xmlns:converters="clr-namespace:RelatedRecords.Wpf"
        xmlns:testing="clr-namespace:FluentTesting;assembly=FluentTesting"
        mc:Ignorable="d"
        Title="API Tester" Height="350" Width="525" WindowState="Maximized">

    <Fluent:RibbonWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary x:Key="itemTemplate" Source="ConfigTemplate.xaml"/>
            <converters:eValidTestToBitmapConverter x:Key="BitmapConverter"/>
            <converters:BooleanToBitmapConverter x:Key="BooleanConverter"/>
        </ResourceDictionary>
    </Fluent:RibbonWindow.Resources>

    <DockPanel LastChildFill="True">
        <Fluent:Ribbon DockPanel.Dock="Top">
            <!--Quick Access Toolbar Items-->
            <Fluent:Ribbon.QuickAccessItems>
                <Fluent:QuickAccessMenuItem Target="{Binding ElementName=buttonGreen}"/>
            </Fluent:Ribbon.QuickAccessItems>

            <!--Tabs-->
            <Fluent:RibbonTabItem Header="Tab" ReduceOrder="(P),(P),(P),(P),(P)">
                <Fluent:RibbonGroupBox Header="Run">
                    <Button Command="{Binding RunTests}">
                        <Button.RenderTransform>
                            <SkewTransform />
                        </Button.RenderTransform>
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="#FF1F3B53"/>
                                <Setter Property="Foreground" Value="#FFFFFFFF"/>
                                <Setter Property="Height" Value="48"/>
                                <Setter Property="Width" Value="48"/>
                                <Setter Property="Margin" Value="0,10,0,0"/>
                                <Setter Property="Padding" Value="3"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Opacity" Value="0.995"/>
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                            <GradientStop Color="#FF617584" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0" To="#FF87BDDD" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" />
                                                                <ColorAnimation Duration="0" To="#FF87BDDD" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                                                <ColorAnimation Duration="0" To="#FF87BDDD" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="arrow" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed"/>
                                                        <VisualState x:Name="Disabled"/>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused"/>
                                                        <VisualState x:Name="Unfocused"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Ellipse x:Name="ellipse" Stroke="#66000000" StrokeThickness="2" Fill="#00000000"/>
                                                <Path x:Name="path" Data="M50.5,4.7500001C25.232973,4.75 4.75,25.232973 4.7500001,50.5 4.75,75.767029 25.232973,96.25 50.5,96.25 75.767029,96.25 96.25,75.767029 96.25,50.5 96.25,25.232973 75.767029,4.75 50.5,4.7500001z M50.5,0C78.390381,0 101,22.609621 101,50.5 101,78.390381 78.390381,101 50.5,101 22.609621,101 0,78.390381 0,50.5 0,22.609621 22.609621,0 50.5,0z" Stretch="Fill" Fill="#FFDADADA" />
                                                <Path x:Name="arrow" Data="F1M1188.2,1715.23L1169.93,1728.57 1151.66,1741.9 1151.66,1715.23 1151.66,1688.57 1169.93,1701.9 1188.2,1715.23z" Stretch="Uniform" Fill="#FFDADADA" Width="30" Height="30" Margin="8,0,0,0" RenderTransformOrigin="0.5,0.5">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <TransformGroup.Children>
                                                                <RotateTransform Angle="0" />
                                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                            </TransformGroup.Children>
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Fluent:RibbonGroupBox>

                <!--Gallery with all tables-->
                <Fluent:RibbonGroupBox Header="Configurations" Name="P">
                    <Fluent:InRibbonGallery ItemWidth="150" ItemHeight="56" ResizeMode="Both"
                                      MinItemsInRow="2" MaxItemsInRow="4"                             
                                      ItemTemplate="{DynamicResource ItemCardTemplate}"
                                      ItemsSource="{Binding Configurations}"
                                      SelectedItem="{Binding Mode=TwoWay, Path=SelectedConfiguration}">
                    </Fluent:InRibbonGallery>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Commands">
                    <Fluent:Button Header="Toggle Selection" Command="{Binding ToggleSelection}" Icon="Images\List.png" LargeIcon="Images\List.png"/>
                    <Fluent:Button Header="Build Headers" Command="{Binding BuildHeaders}" Icon="Images\html.png" LargeIcon="Images\html.png"/>
                    <Fluent:Button Header="Save" Command="{Binding SaveWorkflow}" Icon="Images\save.png" LargeIcon="Images\save.png"/>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Errors" Visibility="{Binding LastErrorsVisibility}" HorizontalAlignment="Right">
                    <Fluent:DropDownButton Name="lastErrors" SizeDefinition="Middle" Header="Found Errors">
                        <Fluent:DropDownButton.Icon>
                            <Grid Width="12" Height="12">
                                <Image Source="Images\Alert.png"/>
                            </Grid>
                        </Fluent:DropDownButton.Icon>

                        <Fluent:Gallery MaxItemsInRow="1" MinItemsInRow="1" ItemWidth="200"
                                        ItemsSource="{Binding Mode=OneWay, Path=LastErrors}" 
                                        ItemTemplate="{DynamicResource ColumnsTemplate}"/>
                        <Fluent:MenuItem Header="Clear" Command="{Binding ClearLastErrorsCommand}" Icon="Images\clear.png"/>
                    </Fluent:DropDownButton>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Wait" Visibility="{Binding SprocketVisibility}" HorizontalAlignment="Right">
                    <Border Padding="1" CornerRadius="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="Black" BorderThickness="1">
                        <Border.Background>
                            <SolidColorBrush Color="Black"/>
                        </Border.Background>
                        <StackPanel>
                            <wpfspark:SprocketControl 
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top"
                                  TickColor="Orange"
                                  Width="40"
                                  Height="40"
                                  TickWidth="3"
                                  TickCount="40"
                                  StartAngle="-90"
                                  IsIndeterminate="{Binding IsBusy}"
                                  Interval="30" />
                            <wpfspark:FluidStatusBar 
                                 x:Name="customStatusBar"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"
                                 FadeOutDirection="Down"
                                 FadeOutDistance="400"
                                 FadeOutDuration="00:00:00.75"
                                 MoveDuration="00:00:00.3"
                                 Foreground="Orange"
                                 Background="Transparent"
                                 FontFamily="Segoe WP"
                                 FontWeight="Light"
                                 FontStyle="Italic"
                                 FontSize="10"/>
                        </StackPanel>
                    </Border>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <!--Backstage Items-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage>
                    <Fluent:BackstageTabControl>
                        <Fluent:Button Header="Add API Configuration" Command="{Binding LoadConfiguration}" Icon="Images\Application.png"/>
                        <Fluent:Button Header="Close" Command="{Binding ExitApplication}" Icon="Images\Exit.png"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>
        </Fluent:Ribbon>

        <!--View Current configuration Details-->
        <TabControl>
            <!-- {Binding Mode=OneWay, Path=isNotEditingWorkflow} -->
            <TabItem Header="Configuration" IsSelected="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20*"/>
                        <RowDefinition Height="3"/>
                        <RowDefinition Height="60*"/>
                        <RowDefinition Height="3"/>
                        <RowDefinition Height="20*"/>
                    </Grid.RowDefinitions>

                    <Border Padding="4" CornerRadius="2"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="DarkGray" BorderThickness="1">
                        <DockPanel LastChildFill="True">
                            <Grid DockPanel.Dock="Top" HorizontalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="35*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="35*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Host Name" />
                                <ComboBox Grid.Column="1"  
                                  ItemsSource="{Binding SelectedConfiguration.setup.host}"
                                  SelectedItem="{Binding Mode=TwoWay, Path=SelectedHost}"
                                  Margin="0,0,4,0"
                                  VerticalAlignment="Center">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding name}" FontWeight="DemiBold"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>

                                <TextBlock Text="Workflow" Grid.Column="2" />
                                <Button Command="{Binding EditWorkflow}" Style="{DynamicResource EditButton}" Grid.Column="3"/>
                                <ComboBox Grid.Column="4"  
                                  ItemsSource="{Binding SelectedConfiguration.setup.workflow}"
                                  SelectedItem="{Binding Mode=TwoWay, Path=SelectedWorkflow}"
                                  VerticalAlignment="Center">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding name}" FontWeight="DemiBold"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>

                                <TextBlock Grid.Row="1" Text="Source" />
                                <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="4" Text="{Binding SelectedConfiguration.setup.source}" VerticalAlignment="Center"/>
                            </Grid>
                            <DataGrid ItemsSource="{Binding HeadersTable}"
                          CanUserResizeRows="False" 
                          SelectionMode="Single" 
                          AlternatingRowBackground="LemonChiffon" 
                          ClipboardCopyMode="IncludeHeader" 
                          IsReadOnly="True" 
                          IsTextSearchEnabled="True"
                          AutoGenerateColumns="True"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"/>
                        </DockPanel>
                    </Border>

                    <GridSplitter Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="1"
                          Style="{DynamicResource GridSplitterStyle}" Background="LightBlue"/>

                    <Border Grid.Row="2" 
                    Padding="4" CornerRadius="2"  
                    VerticalAlignment="Stretch" 
                    HorizontalAlignment="Stretch" 
                    BorderBrush="DarkGray" 
                    BorderThickness="1">
                        <DataGrid ItemsSource="{Binding MethodsTable}"
                          SelectedItem="{Binding Mode=TwoWay, Path=SelectedDataRowView}"
                          CanUserResizeRows="False" 
                          SelectionMode="Single" 
                          AlternatingRowBackground="LemonChiffon" 
                          ClipboardCopyMode="IncludeHeader" 
                          IsReadOnly="False" 
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          IsTextSearchEnabled="True"
                          AutoGenerateColumns="False"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                            <DataGrid.Resources>
                                <DataTemplate x:Key="ImageTemplate">
                                    <Image Source="{Binding isValidTest, Converter={StaticResource BitmapConverter}}"
                                           Height="16" Width="16"/>
                                </DataTemplate>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Header="Selected" Binding="{Binding Mode=TwoWay, Path=isSelected}" IsReadOnly="False"/>
                                <DataGridTemplateColumn Header="Passed" IsReadOnly="True" CellTemplate="{StaticResource ImageTemplate}" />
                                <DataGridTextColumn Header="Name" Binding="{Binding name}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Http Method" Binding="{Binding httpMethod}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Url" Binding="{Binding url}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Type" Binding="{Binding type}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Description" Binding="{Binding description}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>

                    <GridSplitter Grid.Row="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="1"
                          Style="{DynamicResource GridSplitterStyle}" Background="LightBlue"/>

                    <Border Grid.Row="4" 
                    Padding="4" CornerRadius="2"  
                    VerticalAlignment="Stretch" 
                    HorizontalAlignment="Stretch" 
                    BorderBrush="DarkGray" 
                    BorderThickness="1">
                        <DataGrid ItemsSource="{Binding ParametersTable}"
                          CanUserResizeRows="False" 
                          SelectionMode="Single" 
                          AlternatingRowBackground="LemonChiffon" 
                          ClipboardCopyMode="IncludeHeader" 
                          IsReadOnly="True" 
                          IsTextSearchEnabled="True"
                          AutoGenerateColumns="True"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"/>
                    </Border>
                </Grid>
            </TabItem>
            <TabItem Header="Swagger">
                <Grid>
                    <Border
                        Padding="4" CornerRadius="2"  
                        VerticalAlignment="Stretch" 
                        HorizontalAlignment="Stretch" 
                        BorderBrush="DarkGray" 
                        BorderThickness="1">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <TextBlock Text="Url"/>
                            <TextBox Grid.Column="1" 
                                     x:Name="txtUrl"
                                     Text="{Binding Mode=TwoWay, Path=SelectedConfiguration.documentationUrl, UpdateSourceTrigger=Explicit}"
                                     TextChanged="txtUrl_TextChanged"/>

                            <Border Grid.Row="1" Grid.ColumnSpan="2"
                                Padding="4" CornerRadius="2"  
                                VerticalAlignment="Stretch" 
                                HorizontalAlignment="Stretch" 
                                BorderBrush="DarkGray" 
                                BorderThickness="1">

                                <WebBrowser 
                                    x:Name="webBrowser"                            
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"/>
                            </Border>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <TabItem Header="Edit Workflow" IsSelected="{Binding Mode=OneWay, Path=isEditingWorkflow}" Visibility="{Binding EditWorkflowVisibility}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40*"/>
                        <RowDefinition Height="3"/>
                        <RowDefinition Height="30*"/>
                        <RowDefinition Height="3"/>
                        <RowDefinition Height="30*"/>
                    </Grid.RowDefinitions>
                    
                    <Border
                        Padding="4" CornerRadius="2"  
                        VerticalAlignment="Stretch" 
                        HorizontalAlignment="Stretch" 
                        BorderBrush="DarkGray" 
                        BorderThickness="1">

                        <DataGrid ItemsSource="{Binding WorkflowTable}"
                          SelectedItem="{Binding Mode=TwoWay, Path=SelectedWorkflowDataRowView}"
                          CanUserResizeRows="False" 
                          SelectionMode="Single" 
                          AlternatingRowBackground="LemonChiffon" 
                          ClipboardCopyMode="IncludeHeader" 
                          IsReadOnly="True" 
                          IsTextSearchEnabled="True"
                          AutoGenerateColumns="True"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        </DataGrid>
                    </Border>

                    <GridSplitter Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="1"
                          Style="{DynamicResource GridSplitterStyle}" Background="LightBlue"/>

                    <Border Grid.Row="2"
                        Padding="4" CornerRadius="2"  
                        VerticalAlignment="Stretch" 
                        HorizontalAlignment="Stretch" 
                        BorderBrush="DarkGray" 
                        BorderThickness="1">

                        <DataGrid ItemsSource="{Binding WorkflowParametersTable}"
                          CanUserResizeRows="False" 
                          SelectionMode="Single" 
                          AlternatingRowBackground="LemonChiffon" 
                          ClipboardCopyMode="IncludeHeader" 
                          IsReadOnly="True" 
                          IsTextSearchEnabled="True"
                          AutoGenerateColumns="True"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        </DataGrid>
                    </Border>

                    <GridSplitter Grid.Row="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="1"
                          Style="{DynamicResource GridSplitterStyle}" Background="LightBlue"/>

                    <Border Grid.Row="4"
                        Padding="4" CornerRadius="2"  
                        VerticalAlignment="Stretch" 
                        HorizontalAlignment="Stretch" 
                        BorderBrush="DarkGray" 
                        BorderThickness="1">
                        <Border.Resources>
                            <ObjectDataProvider x:Key="Operators" MethodName="GetValues" ObjectType="{x:Type testing:eOperator}">
                                <ObjectDataProvider.MethodParameters>
                                    <x:Type Type="testing:eOperator"/>
                                </ObjectDataProvider.MethodParameters>
                            </ObjectDataProvider>
                            <ObjectDataProvider x:Key="Conditions" MethodName="GetValues" ObjectType="{x:Type testing:eCondition}">
                                <ObjectDataProvider.MethodParameters>
                                    <x:Type Type="testing:eCondition"/>
                                </ObjectDataProvider.MethodParameters>
                            </ObjectDataProvider>
                        </Border.Resources>

                        <DataGrid ItemsSource="{Binding WorkflowResultsTable}"
                          CanUserResizeRows="False" 
                          SelectionMode="Single" 
                          AlternatingRowBackground="LemonChiffon" 
                          ClipboardCopyMode="IncludeHeader" 
                          IsReadOnly="False" 
                          IsTextSearchEnabled="True"
                          AutoGenerateColumns="False"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Property" Binding="{Binding propertyName}"/>
                                <DataGridComboBoxColumn Header="Condition" 
                                                        ItemsSource="{Binding Source={StaticResource Conditions}}"
                                                        TextBinding="{Binding condition}"
                                                        SelectedValueBinding="{Binding condition}"
                                                        SelectedValuePath=""
                                                        SelectedItemBinding="{Binding condition}"/>
                                <DataGridComboBoxColumn Header="Operator" 
                                                        ItemsSource="{Binding Source={StaticResource Operators}}"
                                                        TextBinding="{Binding operator}"
                                                        SelectedValueBinding="{Binding operator}"
                                                        SelectedValuePath=""
                                                        SelectedItemBinding="{Binding operator}"/>
                                <DataGridTextColumn Header="Value" Binding="{Binding value}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>

                </Grid>
            </TabItem>
            <TabItem Header="Results" Visibility="{Binding ResultsVisibility}">
                <Grid>
                    <Border
                        Padding="4" CornerRadius="2"  
                        VerticalAlignment="Stretch" 
                        HorizontalAlignment="Stretch" 
                        BorderBrush="DarkGray" 
                        BorderThickness="1">

                        <DataGrid ItemsSource="{Binding ResultsTable}"
                          CanUserResizeRows="False" 
                          SelectionMode="Single" 
                          AlternatingRowBackground="LemonChiffon" 
                          ClipboardCopyMode="IncludeHeader" 
                          IsReadOnly="True" 
                          IsTextSearchEnabled="True"
                          AutoGenerateColumns="False"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                            <DataGrid.Resources>
                                <DataTemplate x:Key="ImageTemplate">
                                    <Image Source="{Binding Passed, Converter={StaticResource BooleanConverter}}"
                                           Height="16" Width="16"
                                           VerticalAlignment="Top"/>
                                </DataTemplate>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Passed" CellTemplate="{StaticResource ImageTemplate}" />
                                <DataGridTextColumn Header="Name" Binding="{Binding name}"/>
                                <DataGridTextColumn Header="Results" Binding="{Binding Results}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                </Grid>
            </TabItem>
        </TabControl>
    </DockPanel>
</Fluent:RibbonWindow>
