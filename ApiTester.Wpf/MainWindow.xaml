<Fluent:RibbonWindow x:Class="ApiTester.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
        xmlns:wpfspark="clr-namespace:WPFSpark;assembly=WPFSpark"                 
        xmlns:local="clr-namespace:ApiTester.Wpf"
        mc:Ignorable="d"
        Title="API Tester" Height="350" Width="525" WindowState="Maximized">

    <Fluent:RibbonWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary x:Key="itemTemplate" Source="ConfigTemplate.xaml"/>
        </ResourceDictionary>
    </Fluent:RibbonWindow.Resources>

    <DockPanel LastChildFill="True">
        <Fluent:Ribbon DockPanel.Dock="Top">
            <!--Quick Access Toolbar Items-->
            <Fluent:Ribbon.QuickAccessItems>
                <Fluent:QuickAccessMenuItem Target="{Binding ElementName=buttonGreen}"/>
            </Fluent:Ribbon.QuickAccessItems>

            <!--Tabs-->
            <Fluent:RibbonTabItem Header="Tab" ReduceOrder="(P),(P),(P),(P),(P)">
                <Fluent:RibbonGroupBox Header="Navigation">
                    <Button Command="{Binding RunTests}">
                        <Button.RenderTransform>
                            <SkewTransform />
                        </Button.RenderTransform>
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="#FF1F3B53"/>
                                <Setter Property="Foreground" Value="#FFFFFFFF"/>
                                <Setter Property="Height" Value="48"/>
                                <Setter Property="Width" Value="48"/>
                                <Setter Property="Margin" Value="0,10,0,0"/>
                                <Setter Property="Padding" Value="3"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Opacity" Value="0.995"/>
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                            <GradientStop Color="#FF617584" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0" To="#FF87BDDD" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" />
                                                                <ColorAnimation Duration="0" To="#FF87BDDD" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed"/>
                                                        <VisualState x:Name="Disabled"/>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused"/>
                                                        <VisualState x:Name="Unfocused"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Ellipse x:Name="ellipse" Stroke="#66000000" StrokeThickness="4" Fill="#00000000"/>
                                                <Path x:Name="path" Data="M62.285461,38.208038 L62.285461,46.520542 L27.04554,46.192837 L36.261051,57.094002 L36.189625,67.302391 L14.535425,41.780952 L37.249847,17.317707 L37.035561,26.828125 L27.071419,38 z" Margin="15.301,14.961,15.999,14.914" Stretch="Fill" StrokeThickness="4" UseLayoutRounding="False" Fill="#64000000"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Fluent:RibbonGroupBox>

                <!--Gallery with all tables-->
                <Fluent:RibbonGroupBox Header="Configurations" Name="P">
                    <Fluent:InRibbonGallery ItemWidth="200" ItemHeight="56" ResizeMode="Both"
                                      MinItemsInRow="2" MaxItemsInRow="7"                             
                                      ItemTemplate="{DynamicResource ItemCardTemplate}"
                                      ItemsSource="{Binding Configurations}"
                                      SelectedItem="{Binding Mode=TwoWay, Path=SelectedConfiguration}">
                    </Fluent:InRibbonGallery>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Errors" Visibility="{Binding LastErrorsVisibility}" HorizontalAlignment="Right">
                    <Fluent:DropDownButton Name="lastErrors" SizeDefinition="Middle" Header="Found Errors">
                        <Fluent:DropDownButton.Icon>
                            <Grid Width="12" Height="12">
                                <Image Source="Images\Alert.png"/>
                            </Grid>
                        </Fluent:DropDownButton.Icon>

                        <Fluent:Gallery MaxItemsInRow="1" MinItemsInRow="1" ItemWidth="200"
                                        ItemsSource="{Binding Mode=OneWay, Path=LastErrors}" 
                                        ItemTemplate="{DynamicResource ColumnsTemplate}"/>
                        <Fluent:MenuItem Header="Clear" Command="{Binding ClearLastErrorsCommand}" Icon="Images\clear.png"/>
                    </Fluent:DropDownButton>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Wait" Visibility="{Binding SprocketVisibility}" HorizontalAlignment="Right">
                    <Border Padding="1" CornerRadius="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="Black" BorderThickness="1">
                        <Border.Background>
                            <SolidColorBrush Color="Black"/>
                        </Border.Background>
                        <StackPanel>
                            <wpfspark:SprocketControl 
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top"
                                  TickColor="Orange"
                                  Width="40"
                                  Height="40"
                                  TickWidth="3"
                                  TickCount="40"
                                  StartAngle="-90"
                                  IsIndeterminate="{Binding IsBusy}"
                                  Interval="30" />
                            <wpfspark:FluidStatusBar 
                                 x:Name="customStatusBar"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"
                                 FadeOutDirection="Down"
                                 FadeOutDistance="400"
                                 FadeOutDuration="00:00:00.75"
                                 MoveDuration="00:00:00.3"
                                 Foreground="Orange"
                                 Background="Transparent"
                                 FontFamily="Segoe WP"
                                 FontWeight="Light"
                                 FontStyle="Italic"
                                 FontSize="10"/>
                        </StackPanel>
                    </Border>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

            <!--Backstage Items-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage>
                    <Fluent:BackstageTabControl>
                        <Fluent:Button Header="Add API Configuration" Command="{Binding LoadConfiguration}" Icon="Images\Application.png"/>
                        <Fluent:Button Header="Close" Command="{Binding ExitApplication}" Icon="Images\Exit.png"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>
        </Fluent:Ribbon>

        <!--View Current configuration Details-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="20*"/>
                <RowDefinition Height="3"/>
                <RowDefinition Height="60*"/>
                <RowDefinition Height="3"/>
                <RowDefinition Height="20*"/>
            </Grid.RowDefinitions>
            
            <Border Padding="4" CornerRadius="2"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="DarkGray" BorderThickness="1">
                <DockPanel LastChildFill="True">
                    <Grid DockPanel.Dock="Top" HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="150"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
                        
						<TextBlock Text="Base Address" />
                        <TextBlock Grid.Column="1" Text="{Binding SelectedConfiguration.setup.baseAddress}" FontWeight="DemiBold" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="1" Text="Source" />
						<TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding SelectedConfiguration.setup.source}" VerticalAlignment="Center"/>
                    </Grid>
                    <DataGrid ItemsSource="{Binding HeadersTable}"
                          CanUserResizeRows="False" 
                          SelectionMode="Single" 
                          AlternatingRowBackground="LemonChiffon" 
                          ClipboardCopyMode="IncludeHeader" 
                          IsReadOnly="True" 
                          IsTextSearchEnabled="True"
                          AutoGenerateColumns="True"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"/>
                </DockPanel>
            </Border>

            <GridSplitter Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="1"
                          Style="{DynamicResource GridSplitterStyle}" Background="LightBlue"/>

            <Border Grid.Row="2" 
                    Padding="4" CornerRadius="2"  
                    VerticalAlignment="Stretch" 
                    HorizontalAlignment="Stretch" 
                    BorderBrush="DarkGray" 
                    BorderThickness="1">
                    <DataGrid ItemsSource="{Binding MethodsTable}"
                          SelectedItem="{Binding Mode=TwoWay, Path=SelectedDataRowView}"
                          CanUserResizeRows="False" 
                          SelectionMode="Single" 
                          AlternatingRowBackground="LemonChiffon" 
                          ClipboardCopyMode="IncludeHeader" 
                          IsReadOnly="True" 
                          IsTextSearchEnabled="True"
                          AutoGenerateColumns="True"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"/>
            </Border>

            <GridSplitter Grid.Row="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="1"
                          Style="{DynamicResource GridSplitterStyle}" Background="LightBlue"/>

            <Border Grid.Row="4" 
                    Padding="4" CornerRadius="2"  
                    VerticalAlignment="Stretch" 
                    HorizontalAlignment="Stretch" 
                    BorderBrush="DarkGray" 
                    BorderThickness="1">
                <DataGrid ItemsSource="{Binding ParametersTable}"
                          CanUserResizeRows="False" 
                          SelectionMode="Single" 
                          AlternatingRowBackground="LemonChiffon" 
                          ClipboardCopyMode="IncludeHeader" 
                          IsReadOnly="True" 
                          IsTextSearchEnabled="True"
                          AutoGenerateColumns="True"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"/>
            </Border>
        </Grid>
    </DockPanel>
</Fluent:RibbonWindow>
