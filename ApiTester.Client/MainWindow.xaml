<Fluent:RibbonWindow x:Class="ApiTester.Client.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
        xmlns:wpfspark="clr-namespace:WPFSpark;assembly=WPFSpark"                 
        xmlns:local="clr-namespace:ApiTester.Client"
        xmlns:controls="clr-namespace:ApiTester.Client.Controls"                     
        xmlns:testing="clr-namespace:FluentTesting;assembly=FluentTesting"
        mc:Ignorable="d"
        Title="API Tester" Height="350" Width="525" WindowState="Maximized">

    <Fluent:RibbonWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary x:Key="itemTemplate" Source="ConfigTemplate.xaml"/>
        </ResourceDictionary>
    </Fluent:RibbonWindow.Resources>

    <DockPanel LastChildFill="True">
        <Fluent:Ribbon DockPanel.Dock="Top">
            <!--Quick Access Toolbar Items-->
            <Fluent:Ribbon.QuickAccessItems>
                <Fluent:QuickAccessMenuItem Target="{Binding ElementName=buttonGreen}"/>
            </Fluent:Ribbon.QuickAccessItems>

            <!--Tabs-->
            <Fluent:RibbonTabItem Header="Tab" ReduceOrder="(P),(P),(P),(P),(P)">
                <Fluent:RibbonGroupBox Header="Run">
                    <Button Command="{Binding RunWorkflowTests}">
                        <Button.RenderTransform>
                            <SkewTransform />
                        </Button.RenderTransform>
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="#FF1F3B53"/>
                                <Setter Property="Foreground" Value="#FFFFFFFF"/>
                                <Setter Property="Height" Value="48"/>
                                <Setter Property="Width" Value="48"/>
                                <Setter Property="Margin" Value="0,10,0,0"/>
                                <Setter Property="Padding" Value="3"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Opacity" Value="0.995"/>
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                            <GradientStop Color="#FF617584" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0" To="#FF87BDDD" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" />
                                                                <ColorAnimation Duration="0" To="#FF87BDDD" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                                                <ColorAnimation Duration="0" To="#FF87BDDD" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="arrow" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed"/>
                                                        <VisualState x:Name="Disabled"/>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused"/>
                                                        <VisualState x:Name="Unfocused"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Ellipse x:Name="ellipse" Stroke="#66000000" StrokeThickness="2" Fill="#00000000"/>
                                                <Path x:Name="path" Data="M50.5,4.7500001C25.232973,4.75 4.75,25.232973 4.7500001,50.5 4.75,75.767029 25.232973,96.25 50.5,96.25 75.767029,96.25 96.25,75.767029 96.25,50.5 96.25,25.232973 75.767029,4.75 50.5,4.7500001z M50.5,0C78.390381,0 101,22.609621 101,50.5 101,78.390381 78.390381,101 50.5,101 22.609621,101 0,78.390381 0,50.5 0,22.609621 22.609621,0 50.5,0z" Stretch="Fill" Fill="#FFDADADA" />
                                                <Path x:Name="arrow" Data="F1M1188.2,1715.23L1169.93,1728.57 1151.66,1741.9 1151.66,1715.23 1151.66,1688.57 1169.93,1701.9 1188.2,1715.23z" Stretch="Uniform" Fill="#FFDADADA" Width="30" Height="30" Margin="8,0,0,0" RenderTransformOrigin="0.5,0.5">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <TransformGroup.Children>
                                                                <RotateTransform Angle="0" />
                                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                            </TransformGroup.Children>
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Fluent:RibbonGroupBox>

                <!--Gallery with all tables-->
                <Fluent:RibbonGroupBox Header="Controllers" Name="P">
                    <Fluent:InRibbonGallery ItemWidth="150" ItemHeight="56" ResizeMode="Both"
                                      MinItemsInRow="2" MaxItemsInRow="4"                             
                                      ItemTemplate="{DynamicResource ItemCardTemplate}"
                                      ItemsSource="{Binding Configurations}"
                                      SelectedItem="{Binding Mode=TwoWay, Path=SelectedConfiguration}">
                    </Fluent:InRibbonGallery>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Methods" Name="PP">
                    <Fluent:InRibbonGallery ItemWidth="150" ItemHeight="56" ResizeMode="Both"
                                      MinItemsInRow="1" MaxItemsInRow="2"                             
                                      ItemTemplate="{DynamicResource ItemCardTemplate}"
                                      ItemsSource="{Binding SelectedConfiguration.method}"
                                      SelectedItem="{Binding Mode=TwoWay, Path=SelectedMethod}">
                    </Fluent:InRibbonGallery>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Workflows" Name="PPP">
                    <Fluent:InRibbonGallery ItemWidth="150" ItemHeight="56" ResizeMode="Both"
                                      MinItemsInRow="1" MaxItemsInRow="1"                             
                                      ItemTemplate="{DynamicResource ItemCardTemplate}"
                                      ItemsSource="{Binding SelectedConfiguration.setup.workflow}"
                                      SelectedItem="{Binding Mode=TwoWay, Path=SelectedWorkflow}">
                    </Fluent:InRibbonGallery>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Hosts" Name="PPPP">
                    <Fluent:InRibbonGallery ItemWidth="110" ItemHeight="56" ResizeMode="Both"
                                      MinItemsInRow="1" MaxItemsInRow="1"                             
                                      ItemTemplate="{DynamicResource ItemCardTemplate}"
                                      ItemsSource="{Binding SelectedConfiguration.setup.host}"
                                      SelectedItem="{Binding Mode=TwoWay, Path=SelectedHost}">
                    </Fluent:InRibbonGallery>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Commands">
                    <Fluent:Button Header="Toggle Selection" Command="{Binding ToggleSelection}" Icon="Images\List.png" LargeIcon="Images\List.png" Visibility="Collapsed"/>
                    <Fluent:Button Header="Build Headers" Command="{Binding BuildHeaders}" Icon="Images\html.png" LargeIcon="Images\html.png" Visibility="Collapsed"/>
                    <Fluent:Button Header="Add Task" Command="{Binding AddTask}" Icon="Images\addtask.png" LargeIcon="Images\addtask.png"/>
                    <Fluent:Button Header="Add Workflow" Command="{Binding AddWorkflow}" Icon="Images\workflow.png" LargeIcon="Images\workflow.png"/>
                    <Fluent:Button Header="Save" Command="{Binding SaveWorkflowItems}" Icon="Images\save.png" LargeIcon="Images\save.png"/>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Errors" Visibility="{Binding LastErrorsVisibility}" HorizontalAlignment="Right">
                    <Fluent:DropDownButton Name="lastErrors" SizeDefinition="Middle" Header="Found Errors">
                        <Fluent:DropDownButton.Icon>
                            <Grid Width="12" Height="12">
                                <Image Source="Images\Alert.png"/>
                            </Grid>
                        </Fluent:DropDownButton.Icon>

                        <Fluent:Gallery MaxItemsInRow="1" MinItemsInRow="1" ItemWidth="200"
                                        ItemsSource="{Binding Mode=OneWay, Path=LastErrors}" 
                                        ItemTemplate="{DynamicResource ColumnsTemplate}"/>
                        <Fluent:MenuItem Header="Clear" Command="{Binding ClearLastErrorsCommand}" Icon="Images\clear.png"/>
                    </Fluent:DropDownButton>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Wait" Visibility="{Binding SprocketVisibility}" HorizontalAlignment="Right">
                    <Border Padding="1" CornerRadius="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="Black" BorderThickness="1">
                        <Border.Background>
                            <SolidColorBrush Color="Black"/>
                        </Border.Background>
                        <StackPanel>
                            <wpfspark:SprocketControl 
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top"
                                  TickColor="Orange"
                                  Width="40"
                                  Height="40"
                                  TickWidth="3"
                                  TickCount="40"
                                  StartAngle="-90"
                                  IsIndeterminate="{Binding IsBusy}"
                                  Interval="30" />
                            <wpfspark:FluidStatusBar 
                                 x:Name="customStatusBar"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"
                                 FadeOutDirection="Down"
                                 FadeOutDistance="400"
                                 FadeOutDuration="00:00:00.75"
                                 MoveDuration="00:00:00.3"
                                 Foreground="Orange"
                                 Background="Transparent"
                                 FontFamily="Segoe WP"
                                 FontWeight="Light"
                                 FontStyle="Italic"
                                 FontSize="10"/>
                        </StackPanel>
                    </Border>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <!--Backstage Items-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage>
                    <Fluent:BackstageTabControl>
                        <Fluent:Button Header="Add API Configuration" Command="{Binding LoadConfiguration}" Icon="Images\Application.png"/>
                        <Fluent:Button Header="Close" Command="{Binding ExitApplication}" Icon="Images\Exit.png"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>
        </Fluent:Ribbon>

        <TextBlock DockPanel.Dock="Top" Text="Workflow Tasks" />
        <!--View Current configuration Details-->
        <ListBox DockPanel.Dock="Bottom" ItemsSource="{Binding Path=SelectedWorkflowDef.task}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <controls:TaskControl DataContext="{Binding}" Width="200" Height="132"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>
    </DockPanel>
</Fluent:RibbonWindow>