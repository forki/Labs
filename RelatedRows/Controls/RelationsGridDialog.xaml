<UserControl x:Class="RelatedRows.Controls.RelationsGridDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" 
             Width="680" Height="544"
             Padding="4 4 4 4">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="panelBackgroundBrush">
                <LinearGradientBrush.GradientStops>
                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                    <GradientStop Color="#FFFFFFFF" Offset="1" />
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <Style x:Key="GridSplitterPreviewStyle">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}">
                                <Border BorderThickness="1,1,0,0" BorderBrush="{StaticResource ResourceKey=panelBackgroundBrush}">
                                    <Canvas Width="6" Height="3">
                                        <Rectangle Fill="{StaticResource ResourceKey=panelBackgroundBrush}" Width="2" Height="2" Canvas.Left="1" Canvas.Top="0" />
                                        <Rectangle Fill="{StaticResource ResourceKey=panelBackgroundBrush}" Width="2" Height="2" Canvas.Left="5" Canvas.Top="0" />
                                        <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="0" Canvas.Top="0" />
                                        <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="4" Canvas.Top="0" />
                                    </Canvas>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridSplitter}">
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}">
                                <Border BorderThickness="1,1,0,0" BorderBrush="{StaticResource ResourceKey=panelBackgroundBrush}">
                                    <Canvas Width="6" Height="3">
                                        <Rectangle Fill="{StaticResource ResourceKey=panelBackgroundBrush}" Width="2" Height="2" Canvas.Left="1" Canvas.Top="0" />
                                        <Rectangle Fill="{StaticResource ResourceKey=panelBackgroundBrush}" Width="2" Height="2" Canvas.Left="5" Canvas.Top="0" />
                                        <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="0" Canvas.Top="0" />
                                        <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="4" Canvas.Top="0" />
                                    </Canvas>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.65*" />
            <RowDefinition Height="0.35*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <DockPanel LastChildFill="True">
            <ToolBarTray DockPanel.Dock="Top" >
                <ToolBar Style="{DynamicResource MaterialDesignToolBar}" ClipToBounds="False">
                    <materialDesign:Chip Content="Source" Icon="S" Margin="0 0 4 4" />
                    <ComboBox materialDesign:HintAssist.Hint="(search table)" 
                                            MinWidth="72"
                                            Margin="16 0 0 0"
                                            VerticalAlignment="Center" 
                                            IsEditable="True"                          
                                            ItemsSource="{Binding SelectedDataset.Table}"
                                            SelectedItem="{Binding Mode=TwoWay, Path=SelectedTable, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                    </ComboBox>
                    <Separator />
                    <Button ToolTip="Remove" Command="{Binding RemoveRelationshipsCommand}" IsEnabled="{Binding SelectedTable.Relationships.Count}">
                        <materialDesign:PackIcon Kind="MinusCircleOutline"/>
                    </Button>
                </ToolBar>
            </ToolBarTray>

            <DataGrid DockPanel.Dock="Bottom" 
                      Margin="0 8 0 0" 
                      ItemsSource="{Binding SelectedTable.Column}" 
                      IsReadOnly="False"
                      CanUserSortColumns="False" 
                      CanUserAddRows="False" 
                      AutoGenerateColumns="False"
                      SelectionMode="Single"
                      SelectionUnit="FullRow"
                      SelectedItem="{Binding Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.SelectedColumn}"
                      materialDesign:DataGridAssist.CellPadding="4 2 2 2"
                      materialDesign:DataGridAssist.ColumnHeaderPadding="4 2 2 2">
                <DataGrid.Columns>
                    <materialDesign:MaterialDataGridTextColumn Binding="{Binding name}"
                                                               Header="Name"                                                 
                                                               IsReadOnly="True"
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                    
                    <materialDesign:MaterialDataGridTextColumn Binding="{Binding DbType}"
                                                               Header="Type"                                                 
                                                               IsReadOnly="True"
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />

                    <DataGridCheckBoxColumn Binding="{Binding isPrimaryKey}" 
                                            IsReadOnly="True"
                                            ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                        <DataGridCheckBoxColumn.Header>
                            <TextBlock Text="Primary Key"/>
                        </DataGridCheckBoxColumn.Header>
                    </DataGridCheckBoxColumn>

                    <DataGridCheckBoxColumn Binding="{Binding isForeignKey}" 
                                            IsReadOnly="True"
                                            ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                        <DataGridCheckBoxColumn.Header>
                            <TextBlock Text="Foreign Key"/>
                        </DataGridCheckBoxColumn.Header>
                    </DataGridCheckBoxColumn>
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>

        <DockPanel Grid.Column="1" LastChildFill="True">
            <ToolBarTray DockPanel.Dock="Top">
                <ToolBar Style="{DynamicResource MaterialDesignToolBar}" ClipToBounds="False">
                    <materialDesign:Chip Content="Target" Icon="T" Margin="0 0 4 4" />
                    <ComboBox materialDesign:HintAssist.Hint="(search table)" 
                                            MinWidth="72"
                                            Margin="16 0 0 0"
                                            VerticalAlignment="Center" 
                                            IsEditable="True"                          
                                            ItemsSource="{Binding SelectedDataset.Table}"
                                            SelectedItem="{Binding Mode=TwoWay, Path=SelectedTargetTable, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                    </ComboBox>
                    <Separator />
                    <Button ToolTip="Add" Command="{Binding RelateColumnsCommand}">
                        <materialDesign:PackIcon Kind="PlusCircleOutline" />
                    </Button>
                </ToolBar>
            </ToolBarTray>

            <DataGrid DockPanel.Dock="Bottom" 
                      Margin="0 8 0 0" 
                      ItemsSource="{Binding SelectedTargetTable.Column}" 
                      IsReadOnly="False"
                      CanUserSortColumns="False" 
                      CanUserAddRows="False" 
                      AutoGenerateColumns="False"
                      SelectionMode="Single"
                      SelectionUnit="FullRow"
                      SelectedItem="{Binding Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.SelectedTargetColumn}"
                      materialDesign:DataGridAssist.CellPadding="4 2 2 2"
                      materialDesign:DataGridAssist.ColumnHeaderPadding="4 2 2 2">
                <DataGrid.Columns>
                    <materialDesign:MaterialDataGridTextColumn Binding="{Binding name}"
                                                               Header="Name"  
                                                               IsReadOnly="True"
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />

                    <materialDesign:MaterialDataGridTextColumn Binding="{Binding DbType}"
                                                               Header="Type"                                                 
                                                               IsReadOnly="True"
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />

                    <DataGridCheckBoxColumn Binding="{Binding isPrimaryKey}" 
                                            ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                            IsReadOnly="True"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                        <DataGridCheckBoxColumn.Header>
                            <TextBlock Text="Primary Key"/>
                        </DataGridCheckBoxColumn.Header>
                    </DataGridCheckBoxColumn>

                    <DataGridCheckBoxColumn Binding="{Binding isForeignKey}" 
                                            IsReadOnly="True"
                                            ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                        <DataGridCheckBoxColumn.Header>
                            <TextBlock Text="Foreign Key"/>
                        </DataGridCheckBoxColumn.Header>
                    </DataGridCheckBoxColumn>
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>

        <ListBox Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding SelectedTable.Relationship}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <ToolBarTray>
                        <ToolBar Style="{DynamicResource MaterialDesignToolBar}" ClipToBounds="False">
                            <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.SetTargetTableCommand}" CommandParameter="{Binding}">
                                    <materialDesign:PackIcon Kind="CursorPointer" />
                            </Button>
                            <materialDesign:Chip Content="{Binding name}" Icon="{Binding iconName}" Margin="0 0 4 4" />
                            <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.UnrelateColumnCommand}" CommandParameter="{Binding}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="KeyRemove" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ToolBar>
                    </ToolBarTray>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <materialDesign:Snackbar Grid.Row="2" Grid.ColumnSpan="2"
                                 HorizontalAlignment="Stretch"
                                 IsActive="{Binding ApplicationErrors.Length}"
                                 x:Name="SnackbarErrors">
            <materialDesign:SnackbarMessage Content="{Binding ApplicationErrors}"                                                    ActionContent="OK" />
        </materialDesign:Snackbar>

        <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.ColumnSpan="2"
                    Margin="0 16 0 0" HorizontalAlignment="Right">
            <Button IsDefault="True" Style="{DynamicResource MaterialDesignFlatButton}"
                    Command="{x:Static wpf:DialogHost.CloseDialogCommand}"
                    IsEnabled="{Binding HasRelationshipChanges}">
                <Button.CommandParameter>
                    <system:Boolean>True</system:Boolean>
                </Button.CommandParameter>
                ACCEPT
            </Button>
            <Button IsCancel="True" Margin="8 0 0 0" Style="{DynamicResource MaterialDesignFlatButton}"
                    Command="{x:Static wpf:DialogHost.CloseDialogCommand}">
                <Button.CommandParameter>
                    <system:Boolean>False</system:Boolean>
                </Button.CommandParameter>
                CANCEL
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
